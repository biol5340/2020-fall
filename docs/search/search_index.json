{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Bioinformatics - BIOL 5340 For full documentation visit mkdocs.org . Unix docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Windows docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material Commands mkdocs new [dir-name] - Create a new project . mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-bioinformatics-biol-5340","text":"For full documentation visit mkdocs.org . Unix docker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material Windows docker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material","title":"Welcome to Bioinformatics - BIOL 5340"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project . mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"group1/","text":"Nothing lasts forever, not even your problems. Stay Positive ! Project Objective: Find the orthologs among the 5 species of beetles and annotate the orthologs. Project Workflow: Step 1: Construct a de novo transcriptome assembly. a. Run Trinity to construct a primary assembly. b. Run BUSCO to check the quality of the assembly. Use BUSCO . Step 2: Filter transcripts with low expression. a. Quantify the expression for each gene. Use salmon in galaxy. - You can import the following galaxy history provided here. - Galaxy History - This history has all the reads and the four de novo trinity assembly required to run salmon. - Salmon is available as a tool in Galaxy. - Salmon in Galaxy - Here are answers to some of the questions about the input data in salmon. - Is this library mate-paired? = Paired-end - Relative orientation of reads within a pair = Mates are oriented towards each other(I = inward) - Specify the strandedness of the reads Not stranded (U) = Not Stranded (U) - Please choose Yes for gcBias and sequence-specific Bias when you run salmon. b. Retain transcripts with a minimum of 5 TPM . Write python script. c. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 3: Identify the coding regions. a. Using generated transcriptome from the previous step, run LongOrfs with threshold set to at least 100 aa length for each ORF. Use TransDecoder.LongOrfs b. Using the predicted peptide sequences ( .pep file) run BLASTP against Tribolium castaneum protein sequences. Use makeblastdb and blastp . # Get the sequence file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_protein.faa.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_protein.faa.gz # Make sure to create blastdb before this command. # Example blastp. blastp -query transdecoder_dir/longest_orfs.pep -db Tcas_protein_db.fasta -max_target_seqs 1 -outfmt 6 -evalue 1e-5 -num_threads 48 > blastp.outfmt6 c. Using the homology information from BLASTP, predict the coding sequence. TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 d. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO Step 4: Find the Orthologs among 5 species. a. Run all vs all BLAST among 5 species. Use makeblastdb and blastp b. Pick the reciprocal Best BLAST hit (RBBH). Write a python script. c. Run a 5 way script to pull out the orthologs among 5 species. Write a python script. Step 5: Add annotation to the orthologs. a. Using T_cas ids and T_cas reference gff files, add chromosome id (for example: LGX, LG2 etc.),chromosome name (Autosome/ Sex chromosome). Write python script. # Get the gff file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_genomic.gff.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_genomic.gff.gz Helpful Hints: To use BUSCO, the first step is to get the lineage and then busco can be run as follows. # Get the lineage wget https://busco.ezlab.org/datasets/endopterygota_odb9.tar.gz # Uncompress the directory. tar xvf endopterygota_odb9.tar.gz --gunzip # Activate busco environment conda activate busco # Run BUSCO run_busco --in transcriptome.fasta --out [ output_directory_name ] -l [ path_to_ ] endopterygota_odb9 -m tran -c 48 - BUSCO manual - To use salmon, activate the conda environment and salmon can be run as follows. # Activate salmon environment. conda activate salmon # Create an index for the transcriptome. salmon index -t transcriptome.fasta -i transcriptome_index # Quantify the expression. salmon quant -i transcriptome_index -l IU --seqBias --gcBias -1 Sample1_R1.fastq.gz -2 Sample1_R2.fastq.gz -p 48 --validateMappings -o Sample1 - Salmon manual - TransDecoder has two programs. These two programs can be run as follows. # To run LongOrfs with minimum ORF length as 100 amino acids. TransDecoder.LongOrfs -t target_transcripts.fasta -m 100 # To run Predict TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 - TransDecoder manual Reference: De novo transcriptome assembly, functional annotation and differential gene expression analysis of juvenile and adult E. fetida , a model oligochaete used in ecotoxicological studies - PDF","title":"Group 1"},{"location":"group1/#project-objective","text":"Find the orthologs among the 5 species of beetles and annotate the orthologs.","title":"Project Objective:"},{"location":"group1/#project-workflow","text":"Step 1: Construct a de novo transcriptome assembly. a. Run Trinity to construct a primary assembly. b. Run BUSCO to check the quality of the assembly. Use BUSCO . Step 2: Filter transcripts with low expression. a. Quantify the expression for each gene. Use salmon in galaxy. - You can import the following galaxy history provided here. - Galaxy History - This history has all the reads and the four de novo trinity assembly required to run salmon. - Salmon is available as a tool in Galaxy. - Salmon in Galaxy - Here are answers to some of the questions about the input data in salmon. - Is this library mate-paired? = Paired-end - Relative orientation of reads within a pair = Mates are oriented towards each other(I = inward) - Specify the strandedness of the reads Not stranded (U) = Not Stranded (U) - Please choose Yes for gcBias and sequence-specific Bias when you run salmon. b. Retain transcripts with a minimum of 5 TPM . Write python script. c. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 3: Identify the coding regions. a. Using generated transcriptome from the previous step, run LongOrfs with threshold set to at least 100 aa length for each ORF. Use TransDecoder.LongOrfs b. Using the predicted peptide sequences ( .pep file) run BLASTP against Tribolium castaneum protein sequences. Use makeblastdb and blastp . # Get the sequence file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_protein.faa.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_protein.faa.gz # Make sure to create blastdb before this command. # Example blastp. blastp -query transdecoder_dir/longest_orfs.pep -db Tcas_protein_db.fasta -max_target_seqs 1 -outfmt 6 -evalue 1e-5 -num_threads 48 > blastp.outfmt6 c. Using the homology information from BLASTP, predict the coding sequence. TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 d. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO Step 4: Find the Orthologs among 5 species. a. Run all vs all BLAST among 5 species. Use makeblastdb and blastp b. Pick the reciprocal Best BLAST hit (RBBH). Write a python script. c. Run a 5 way script to pull out the orthologs among 5 species. Write a python script. Step 5: Add annotation to the orthologs. a. Using T_cas ids and T_cas reference gff files, add chromosome id (for example: LGX, LG2 etc.),chromosome name (Autosome/ Sex chromosome). Write python script. # Get the gff file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_genomic.gff.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_genomic.gff.gz","title":"Project Workflow:"},{"location":"group1/#helpful-hints","text":"To use BUSCO, the first step is to get the lineage and then busco can be run as follows. # Get the lineage wget https://busco.ezlab.org/datasets/endopterygota_odb9.tar.gz # Uncompress the directory. tar xvf endopterygota_odb9.tar.gz --gunzip # Activate busco environment conda activate busco # Run BUSCO run_busco --in transcriptome.fasta --out [ output_directory_name ] -l [ path_to_ ] endopterygota_odb9 -m tran -c 48 - BUSCO manual - To use salmon, activate the conda environment and salmon can be run as follows. # Activate salmon environment. conda activate salmon # Create an index for the transcriptome. salmon index -t transcriptome.fasta -i transcriptome_index # Quantify the expression. salmon quant -i transcriptome_index -l IU --seqBias --gcBias -1 Sample1_R1.fastq.gz -2 Sample1_R2.fastq.gz -p 48 --validateMappings -o Sample1 - Salmon manual - TransDecoder has two programs. These two programs can be run as follows. # To run LongOrfs with minimum ORF length as 100 amino acids. TransDecoder.LongOrfs -t target_transcripts.fasta -m 100 # To run Predict TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 - TransDecoder manual","title":"Helpful Hints:"},{"location":"group1/#reference","text":"De novo transcriptome assembly, functional annotation and differential gene expression analysis of juvenile and adult E. fetida , a model oligochaete used in ecotoxicological studies - PDF","title":"Reference:"},{"location":"group2/","text":"A diamond is merely a lump of coal that did well under pressure. Project Objective: Find the orthologs among the 5 species of beetles and annotate the orthologs. Project Workflow: Step 1: Construct a de novo transcriptome assembly. a. Run Trinity to construct a primary assembly. b. Run BUSCO to check the quality of the assembly. Use BUSCO . Step 2: Identify the coding regions. a. Using the transcriptome from the previous step, run LongOrfs with threshold set to at least 200 aa length for each ORF. Use TransDecoder.LongOrfs with -m 200 flag. b. Using the cds file, predict the protein sequences for single best ORF for gene. Use TransDecoder.Predict with --single_best_only flag. TransDecoder.Predict -t [ name_of_the_transcriptome.fasta ] --single_best_only -O [ output_directory_from_TransDecoder.LongOrfs ] c. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 3: Cluster identical sequences together. a. Cluster all the amino acid sequences which are 100% identical within the predicted peptide file. Use cd-hit with -c 1.0 flag. b. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 4: Find the Orthologs among 5 species. a. Run all vs all BLAST among 5 species. Use makeblastdb and blastp b. Pick the reciprocal Best BLAST hit (RBBH). Write a python script. c. Run a 5 way script to pull out the orthologs among 5 species. Write a python script. Step 5: Add annotation to the orthologs. a. Using T_cas ids and T_cas reference gff files, add chromosome id (for example: LGX, LG2 etc.),chromosome name (Autosome/ Sex chromosome). Write python script. # Get the gff file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_genomic.gff.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_genomic.gff.gz Helpful Hints: To use BUSCO, the first step is to get the lineage and then busco can be run as follows. # Get the lineage wget https://busco.ezlab.org/datasets/endopterygota_odb9.tar.gz # Uncompress the directory. tar xvf endopterygota_odb9.tar.gz --gunzip # Activate busco environment conda activate busco # Run BUSCO run_busco --in transcriptome.fasta --out [ output_directory_name ] -l [ path_to_ ] endopterygota_odb9 -m tran -c 48 - BUSCO manual TransDecoder has two programs. These two programs can be run as follows. # To run LongOrfs with minimum ORF length as 100 amino acids. TransDecoder.LongOrfs -t target_transcripts.fasta -m 100 # To run Predict TransDecoder.Predict -t target_transcripts.fasta --single_best_only -O [ output_directory_from_TransDecoder.LongOrfs ] TransDecoder manual cd-hit can be run as follows. cd-hit -i cds_file -o nr100_cds_file -c 1 .00 cd-hit manual Reference: De novo transcriptome assembly, annotation and comparison of four ecological and evolutionary model salmonid fish species. - PDF","title":"Group 2"},{"location":"group2/#project-objective","text":"Find the orthologs among the 5 species of beetles and annotate the orthologs.","title":"Project Objective:"},{"location":"group2/#project-workflow","text":"Step 1: Construct a de novo transcriptome assembly. a. Run Trinity to construct a primary assembly. b. Run BUSCO to check the quality of the assembly. Use BUSCO . Step 2: Identify the coding regions. a. Using the transcriptome from the previous step, run LongOrfs with threshold set to at least 200 aa length for each ORF. Use TransDecoder.LongOrfs with -m 200 flag. b. Using the cds file, predict the protein sequences for single best ORF for gene. Use TransDecoder.Predict with --single_best_only flag. TransDecoder.Predict -t [ name_of_the_transcriptome.fasta ] --single_best_only -O [ output_directory_from_TransDecoder.LongOrfs ] c. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 3: Cluster identical sequences together. a. Cluster all the amino acid sequences which are 100% identical within the predicted peptide file. Use cd-hit with -c 1.0 flag. b. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 4: Find the Orthologs among 5 species. a. Run all vs all BLAST among 5 species. Use makeblastdb and blastp b. Pick the reciprocal Best BLAST hit (RBBH). Write a python script. c. Run a 5 way script to pull out the orthologs among 5 species. Write a python script. Step 5: Add annotation to the orthologs. a. Using T_cas ids and T_cas reference gff files, add chromosome id (for example: LGX, LG2 etc.),chromosome name (Autosome/ Sex chromosome). Write python script. # Get the gff file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_genomic.gff.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_genomic.gff.gz","title":"Project Workflow:"},{"location":"group2/#helpful-hints","text":"To use BUSCO, the first step is to get the lineage and then busco can be run as follows. # Get the lineage wget https://busco.ezlab.org/datasets/endopterygota_odb9.tar.gz # Uncompress the directory. tar xvf endopterygota_odb9.tar.gz --gunzip # Activate busco environment conda activate busco # Run BUSCO run_busco --in transcriptome.fasta --out [ output_directory_name ] -l [ path_to_ ] endopterygota_odb9 -m tran -c 48 - BUSCO manual TransDecoder has two programs. These two programs can be run as follows. # To run LongOrfs with minimum ORF length as 100 amino acids. TransDecoder.LongOrfs -t target_transcripts.fasta -m 100 # To run Predict TransDecoder.Predict -t target_transcripts.fasta --single_best_only -O [ output_directory_from_TransDecoder.LongOrfs ] TransDecoder manual cd-hit can be run as follows. cd-hit -i cds_file -o nr100_cds_file -c 1 .00 cd-hit manual","title":"Helpful Hints:"},{"location":"group2/#reference","text":"De novo transcriptome assembly, annotation and comparison of four ecological and evolutionary model salmonid fish species. - PDF","title":"Reference:"},{"location":"group3/","text":"The elevator to success is out of order. You' ll have to use the stairs...one step at a time. Project Objective: Find the orthologs among the 5 species of beetles and annotate the orthologs. Project Workflow: Step 1: Construct a de novo transcriptome assembly. a. Run Trinity to construct a primary assembly. b. Run BUSCO to check the quality of the assembly. Use BUSCO . Step 2: Cluster identical sequences together. a. Cluster all the transcript sequences which are 95% similar to each other file. Use cd-hit-est with -c 0.95 flag. b. Using the clustered cds file from the previous step, now cluster the transcript sequences which are 90% similar. Use cd-hit-est with -c 0.90 flag. c. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 3: Identify the coding regions. a. Using the transcriptome from the previous step, run LongOrfs with threshold set to at least 100 aa length for each ORF. Use TransDecoder.LongOrfs with -m 100 flag. b. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 4: Find the Orthologs among 5 species. a. Run all vs all BLAST among 5 species. Use makeblastdb and blastp b. Pick the reciprocal Best BLAST hit (RBBH). Write a python script. c. Run a 5 way script to pull out the orthologs among 5 species. Write a python script. Step 5: Add annotation to the orthologs. a. Using T_cas ids and T_cas reference gff files, add chromosome id (for example: LGX, LG2 etc.),chromosome name (Autosome/ Sex chromosome). Write python script. # Get the gff file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_genomic.gff.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_genomic.gff.gz Helpful Hints: To use BUSCO, the first step is to get the lineage and then busco can be run as follows. # Get the lineage wget https://busco.ezlab.org/datasets/endopterygota_odb9.tar.gz # Uncompress the directory. tar xvf endopterygota_odb9.tar.gz --gunzip # Activate busco environment conda activate busco # Run BUSCO run_busco --in transcriptome.fasta --out [ output_directory_name ] -l [ path_to_ ] endopterygota_odb9 -m tran -c 48 - BUSCO manual TransDecoder has two programs. These two programs can be run as follows. # To run LongOrfs with minimum ORF length as 100 amino acids. TransDecoder.LongOrfs -t target_transcripts.fasta -m 100 TransDecoder manual cd-hit-est can be run as follows. # To cluster sequences which are 95% similar. cd-hit-est -i transcriptome.fasta -o transcriptome_nr95 -c 0 .95 cd-hit-est manual Reference: De novo sequencing and characterization of Picrorhiza kurrooa transcriptome at two temperatures showed major transcriptome adjustments. - PDF","title":"Group 3"},{"location":"group3/#project-objective","text":"Find the orthologs among the 5 species of beetles and annotate the orthologs.","title":"Project Objective:"},{"location":"group3/#project-workflow","text":"Step 1: Construct a de novo transcriptome assembly. a. Run Trinity to construct a primary assembly. b. Run BUSCO to check the quality of the assembly. Use BUSCO . Step 2: Cluster identical sequences together. a. Cluster all the transcript sequences which are 95% similar to each other file. Use cd-hit-est with -c 0.95 flag. b. Using the clustered cds file from the previous step, now cluster the transcript sequences which are 90% similar. Use cd-hit-est with -c 0.90 flag. c. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 3: Identify the coding regions. a. Using the transcriptome from the previous step, run LongOrfs with threshold set to at least 100 aa length for each ORF. Use TransDecoder.LongOrfs with -m 100 flag. b. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 4: Find the Orthologs among 5 species. a. Run all vs all BLAST among 5 species. Use makeblastdb and blastp b. Pick the reciprocal Best BLAST hit (RBBH). Write a python script. c. Run a 5 way script to pull out the orthologs among 5 species. Write a python script. Step 5: Add annotation to the orthologs. a. Using T_cas ids and T_cas reference gff files, add chromosome id (for example: LGX, LG2 etc.),chromosome name (Autosome/ Sex chromosome). Write python script. # Get the gff file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_genomic.gff.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_genomic.gff.gz","title":"Project Workflow:"},{"location":"group3/#helpful-hints","text":"To use BUSCO, the first step is to get the lineage and then busco can be run as follows. # Get the lineage wget https://busco.ezlab.org/datasets/endopterygota_odb9.tar.gz # Uncompress the directory. tar xvf endopterygota_odb9.tar.gz --gunzip # Activate busco environment conda activate busco # Run BUSCO run_busco --in transcriptome.fasta --out [ output_directory_name ] -l [ path_to_ ] endopterygota_odb9 -m tran -c 48 - BUSCO manual TransDecoder has two programs. These two programs can be run as follows. # To run LongOrfs with minimum ORF length as 100 amino acids. TransDecoder.LongOrfs -t target_transcripts.fasta -m 100 TransDecoder manual cd-hit-est can be run as follows. # To cluster sequences which are 95% similar. cd-hit-est -i transcriptome.fasta -o transcriptome_nr95 -c 0 .95 cd-hit-est manual","title":"Helpful Hints:"},{"location":"group3/#reference","text":"De novo sequencing and characterization of Picrorhiza kurrooa transcriptome at two temperatures showed major transcriptome adjustments. - PDF","title":"Reference:"},{"location":"group4/","text":"In life only one thing is certain, Friday will come. Project Objective: Find the orthologs among the 5 species of beetles and annotate the orthologs. Project Workflow: Step 1: Construct a de novo transcriptome assembly. a. Run Trinity to construct a primary assembly. b. Run BUSCO to check the quality of the assembly. Use BUSCO . Step 2: Identify the coding regions. a. Using generated transcriptome from the previous step, run LongOrfs with threshold set to at least 100 aa length for each ORF. Use TransDecoder.LongOrfs b. Using the predicted peptide sequences ( .pep file) run BLASTP against Tribolium castaneum protein sequences. Use makeblastdb and blastp with -max_target_seqs 1 -outfmt 6 -evalue 1e-10 flags. # Get the sequence file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_protein.faa.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_protein.faa.gz # Make sure to create blastdb before this command. # Example blastp. blastp -query transdecoder_dir/longest_orfs.pep -db Tcas_protein_db.fasta -max_target_seqs 1 -outfmt 6 -evalue 1e-10 -num_threads 48 > blastp.outfmt6 c. Using the homology information from BLASTP, predict the coding sequence. TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 d. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . - Step 3: Find the Orthologs among 5 species. a. Run all vs all BLAST among 5 species. Use makeblastdb and blastp . wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_rna.fna.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_rna.fna.gz # Make sure to create blastdb before this command. # Example blastp. blastp -query predicted_peptides.pep -db Tcas_protein_db.fasta -max_target_seqs 1 -outfmt 6 -num_threads 48 > species1_Tcas_db.txt b. Pick the reciprocal Best BLAST hit (RBBH). Write a python script. c. Run a 5 way script to pull out the orthologs among 5 species. Write a python script. - Step 4: Add annotation to the orthologs. a.Using T_cas ids and T_cas reference gff files, add chromosome id (for example: LGX, LG2 etc.),chromosome name (Autosome/ Sex chromosome). Write python script. # Get the gff file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_genomic.gff.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_genomic.gff.gz Helpful Hints: To use BUSCO, the first step is to get the lineage and then busco can be run as follows. # Get the lineage wget https://busco.ezlab.org/datasets/endopterygota_odb9.tar.gz # Uncompress the directory. tar xvf endopterygota_odb9.tar.gz --gunzip # Activate busco environment conda activate busco # Run BUSCO run_busco --in transcriptome.fasta --out [ output_directory_name ] -l [ path_to_ ] endopterygota_odb9 -m tran -c 48 - BUSCO manual TransDecoder has two programs. These two programs can be run as follows. # To run LongOrfs with minimum ORF length as 100 amino acids. TransDecoder.LongOrfs -t target_transcripts.fasta -m 100 # To run Predict TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 TransDecoder manual Reference: High Quality de Novo Transcriptome Assembly of Croton tiglium . - PDF","title":"Group 4"},{"location":"group4/#project-objective","text":"Find the orthologs among the 5 species of beetles and annotate the orthologs.","title":"Project Objective:"},{"location":"group4/#project-workflow","text":"Step 1: Construct a de novo transcriptome assembly. a. Run Trinity to construct a primary assembly. b. Run BUSCO to check the quality of the assembly. Use BUSCO . Step 2: Identify the coding regions. a. Using generated transcriptome from the previous step, run LongOrfs with threshold set to at least 100 aa length for each ORF. Use TransDecoder.LongOrfs b. Using the predicted peptide sequences ( .pep file) run BLASTP against Tribolium castaneum protein sequences. Use makeblastdb and blastp with -max_target_seqs 1 -outfmt 6 -evalue 1e-10 flags. # Get the sequence file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_protein.faa.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_protein.faa.gz # Make sure to create blastdb before this command. # Example blastp. blastp -query transdecoder_dir/longest_orfs.pep -db Tcas_protein_db.fasta -max_target_seqs 1 -outfmt 6 -evalue 1e-10 -num_threads 48 > blastp.outfmt6 c. Using the homology information from BLASTP, predict the coding sequence. TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 d. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . - Step 3: Find the Orthologs among 5 species. a. Run all vs all BLAST among 5 species. Use makeblastdb and blastp . wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_rna.fna.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_rna.fna.gz # Make sure to create blastdb before this command. # Example blastp. blastp -query predicted_peptides.pep -db Tcas_protein_db.fasta -max_target_seqs 1 -outfmt 6 -num_threads 48 > species1_Tcas_db.txt b. Pick the reciprocal Best BLAST hit (RBBH). Write a python script. c. Run a 5 way script to pull out the orthologs among 5 species. Write a python script. - Step 4: Add annotation to the orthologs. a.Using T_cas ids and T_cas reference gff files, add chromosome id (for example: LGX, LG2 etc.),chromosome name (Autosome/ Sex chromosome). Write python script. # Get the gff file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_genomic.gff.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_genomic.gff.gz","title":"Project Workflow:"},{"location":"group4/#helpful-hints","text":"To use BUSCO, the first step is to get the lineage and then busco can be run as follows. # Get the lineage wget https://busco.ezlab.org/datasets/endopterygota_odb9.tar.gz # Uncompress the directory. tar xvf endopterygota_odb9.tar.gz --gunzip # Activate busco environment conda activate busco # Run BUSCO run_busco --in transcriptome.fasta --out [ output_directory_name ] -l [ path_to_ ] endopterygota_odb9 -m tran -c 48 - BUSCO manual TransDecoder has two programs. These two programs can be run as follows. # To run LongOrfs with minimum ORF length as 100 amino acids. TransDecoder.LongOrfs -t target_transcripts.fasta -m 100 # To run Predict TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 TransDecoder manual","title":"Helpful Hints:"},{"location":"group4/#reference","text":"High Quality de Novo Transcriptome Assembly of Croton tiglium . - PDF","title":"Reference:"},{"location":"group5/","text":"Coming together is beginning; keeping together is progress; working together is success. Project Objective: Find the orthologs among the 5 species of beetles and annotate the orthologs.\u00c2 Project Workflow: Step 1: Construct a de novo transcriptome assembly. a. Run Trinity to construct a primary assembly. b. Run BUSCO to check the quality of the assembly. Use BUSCO Step 2: Filter transcripts with low expression. a. Quantify the expression for each gene. Use salmon in galaxy. * You can import the following galaxy history provided here. - Galaxy History * This history has all the reads and the four de novo trinity assembly required to run salmon. * Salmon is available as a tool in Galaxy. - Salmon in Galaxy - Here are answers to some of the questions about the input data in salmon. - Is this library mate-paired? = Paired-end - Relative orientation of reads within a pair = Mates are oriented towards each other(I = inward) - Specify the strandedness of the reads Not stranded (U) = Not Stranded (U) - Please choose Yes for gcBias and sequence-specific Bias when you run salmon. b. Retain only the highest expressed isoforms for each gene. Write a python script. c. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 3.1: Cluster identical sequences together. a. Cluster all the sequences which are 95% identical within the transcriptome file. Use cd-hit-est with -c 0.95 flag. b. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 3.2: Identify the coding regions. a. Using generated transcriptome from the previous step, run LongOrfs with threshold set to at least 200 aa length for each ORF. Use TransDecoder.LongOrfs b. Using the predicted peptide sequences ( .pep file) run BLASTP against Tribolium castaneum protein sequences. Use makeblastdb and blastp with -max_target_seqs 1 -outfmt 6 -evalue 1e-5 flags. # Get the sequence file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_protein.faa.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_protein.faa.gz # Make sure to create blastdb before this command. # Example blastp blastp -query transdecoder_dir/longest_orfs.pep -db Tcas_protein_db.fasta -max_target_seqs 1 -outfmt 6 -evalue 1e-5 -num_threads 48 > blastp.outfmt6 c. Using the homology information from BLASTP, predict the coding sequence. TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 d. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO Step 4: Find the Orthologs among 5 species. a. Run all vs all BLAST among 5 species. Use makeblastdb and blastp . b. Pick the reciprocal Best BLAST hit (RBBH). Write a python script. c. Run a 5 way script to pull out the orthologs among 5 species. Write a python script. Step 5: Add annotation to the orthologs. a. Add annotation to the orthologs. Using T_cas ids and T_cas reference gff files, add chromosome id (for example: LGX, LG2 etc.),chromosome name (Autosome/ Sex chromosome). Write python script. # Get the gff file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_genomic.gff.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_genomic.gff.gz Helpful Hints: To use BUSCO, the first step is to get the lineage and then busco can be run as follows. # Get the lineage wget https://busco.ezlab.org/datasets/endopterygota_odb9.tar.gz # Uncompress the directory. tar xvf endopterygota_odb9.tar.gz --gunzip # Activate busco environment conda activate busco # Run BUSCO run_busco --in transcriptome.fasta --out [ output_directory_name ] -l [ path_to_ ] endopterygota_odb9 -m tran -c 48 - BUSCO manual - To use salmon, activate the conda environment and salmon can be run as follows. # Activate salmon environment. conda activate salmon # Create an index for the transcriptome. salmon index -t transcriptome.fasta -i transcriptome_index # Quantify the expression. salmon quant -i transcriptome_index -l IU --seqBias --gcBias -1 Sample1_R1.fastq.gz -2 Sample1_R2.fastq.gz -p 48 --validateMappings -o Sample1 - Salmon manual - TransDecoder has two programs. These two programs can be run as follows. # To run LongOrfs with minimum ORF length as 200 amino acids. TransDecoder.LongOrfs -t target_transcripts.fasta -m 200 # To run Predict TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 - TransDecoder manual - cd-hit-est can be run as follows. cd-hit-est -i cds_file -o nr95_cds_file -c 0 .95 - cd-hit manual Reference: De Novo transcriptome Assembly and Functional Annotation in Five species of Bats. - PDF","title":"Group 5"},{"location":"group5/#project-objective","text":"Find the orthologs among the 5 species of beetles and annotate the orthologs.\u00c2","title":"Project Objective:"},{"location":"group5/#project-workflow","text":"Step 1: Construct a de novo transcriptome assembly. a. Run Trinity to construct a primary assembly. b. Run BUSCO to check the quality of the assembly. Use BUSCO Step 2: Filter transcripts with low expression. a. Quantify the expression for each gene. Use salmon in galaxy. * You can import the following galaxy history provided here. - Galaxy History * This history has all the reads and the four de novo trinity assembly required to run salmon. * Salmon is available as a tool in Galaxy. - Salmon in Galaxy - Here are answers to some of the questions about the input data in salmon. - Is this library mate-paired? = Paired-end - Relative orientation of reads within a pair = Mates are oriented towards each other(I = inward) - Specify the strandedness of the reads Not stranded (U) = Not Stranded (U) - Please choose Yes for gcBias and sequence-specific Bias when you run salmon. b. Retain only the highest expressed isoforms for each gene. Write a python script. c. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 3.1: Cluster identical sequences together. a. Cluster all the sequences which are 95% identical within the transcriptome file. Use cd-hit-est with -c 0.95 flag. b. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . Step 3.2: Identify the coding regions. a. Using generated transcriptome from the previous step, run LongOrfs with threshold set to at least 200 aa length for each ORF. Use TransDecoder.LongOrfs b. Using the predicted peptide sequences ( .pep file) run BLASTP against Tribolium castaneum protein sequences. Use makeblastdb and blastp with -max_target_seqs 1 -outfmt 6 -evalue 1e-5 flags. # Get the sequence file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_protein.faa.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_protein.faa.gz # Make sure to create blastdb before this command. # Example blastp blastp -query transdecoder_dir/longest_orfs.pep -db Tcas_protein_db.fasta -max_target_seqs 1 -outfmt 6 -evalue 1e-5 -num_threads 48 > blastp.outfmt6 c. Using the homology information from BLASTP, predict the coding sequence. TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 d. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO Step 4: Find the Orthologs among 5 species. a. Run all vs all BLAST among 5 species. Use makeblastdb and blastp . b. Pick the reciprocal Best BLAST hit (RBBH). Write a python script. c. Run a 5 way script to pull out the orthologs among 5 species. Write a python script. Step 5: Add annotation to the orthologs. a. Add annotation to the orthologs. Using T_cas ids and T_cas reference gff files, add chromosome id (for example: LGX, LG2 etc.),chromosome name (Autosome/ Sex chromosome). Write python script. # Get the gff file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_genomic.gff.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_genomic.gff.gz","title":"Project Workflow:"},{"location":"group5/#helpful-hints","text":"To use BUSCO, the first step is to get the lineage and then busco can be run as follows. # Get the lineage wget https://busco.ezlab.org/datasets/endopterygota_odb9.tar.gz # Uncompress the directory. tar xvf endopterygota_odb9.tar.gz --gunzip # Activate busco environment conda activate busco # Run BUSCO run_busco --in transcriptome.fasta --out [ output_directory_name ] -l [ path_to_ ] endopterygota_odb9 -m tran -c 48 - BUSCO manual - To use salmon, activate the conda environment and salmon can be run as follows. # Activate salmon environment. conda activate salmon # Create an index for the transcriptome. salmon index -t transcriptome.fasta -i transcriptome_index # Quantify the expression. salmon quant -i transcriptome_index -l IU --seqBias --gcBias -1 Sample1_R1.fastq.gz -2 Sample1_R2.fastq.gz -p 48 --validateMappings -o Sample1 - Salmon manual - TransDecoder has two programs. These two programs can be run as follows. # To run LongOrfs with minimum ORF length as 200 amino acids. TransDecoder.LongOrfs -t target_transcripts.fasta -m 200 # To run Predict TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 - TransDecoder manual - cd-hit-est can be run as follows. cd-hit-est -i cds_file -o nr95_cds_file -c 0 .95 - cd-hit manual","title":"Helpful Hints:"},{"location":"group5/#reference","text":"De Novo transcriptome Assembly and Functional Annotation in Five species of Bats. - PDF","title":"Reference:"},{"location":"group6/","text":"Even if you are on the right track, you\u2019ll get run over if you just sit there. Project Objective: Find the orthologs among the 5 species of beetles and annotate the orthologs. Project Workflow: Step 1: Construct a de novo transcriptome assembly. a. Run Trinity to construct a primary assembly. b. Run BUSCO to check the quality of the assembly. Use BUSCO . Step 2: Identify the coding regions. a. Using generated transcriptome from the previous step, run LongOrfs with threshold set to at least 100 aa length for each ORF. Use TransDecoder.LongOrfs b. Using the predicted peptide sequences ( .pep file) run BLASTP against Tribolium castaneum protein sequences. Use makeblastdb and blastp with -max_target_seqs 1 -outfmt 6 -evalue 1e-5 flags. # Get the sequence file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_protein.faa.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_protein.faa.gz # Make sure to create blastdb before this command. # Example blastp. blastp -query transdecoder_dir/longest_orfs.pep -db Tcas_protein_db.fasta -max_target_seqs 1 -outfmt 6 -evalue 1e-5 -num_threads 48 > blastp.outfmt6 c. Using the homology information from BLASTP, predict the coding sequence. TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 d. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . - Step 3: Cluster identical sequences together. a. Cluster all the amino acid sequences which are 99% identical within the predicted peptide file. Use cd-hit with -c 0.99 flag. b. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . - Step 4: Filter transcripts with low expression. a. Quantify the expression for each gene. Use salmon b. Retain only the highest expressed isoforms for each gene. Write a python script. c. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . - Step 5: Find the Orthologs among 5 species. a. Run all vs all BLAST among 5 species. Use makeblastdb and blastp . Use Tribolium castaneum transcript sequences. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_rna.fna.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_rna.fna.gz # Make sure to create blastdb before this command. # Example blastp. blastp -query highest_isoform_only.fasta -db Tcas_protein_db.fasta -max_target_seqs 1 -outfmt 6 -num_threads 48 > highest_isoform_only_species1_Tcas_db.txt b. Pick the reciprocal Best BLAST hit (RBBH). Write a python script. c. Run a 5 way script to pull out the orthologs among 5 species. Write a python script. d. Add annotation to the orthologs. Using T_cas ids and T_cas reference gff files, add chromosome id (for example: LGX, LG2 etc.),chromosome name (Autosome/ Sex chromosome). Write python script. # Get the gff file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_genomic.gff.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_genomic.gff.gz Helpful Hints: To use BUSCO, the first step is to get the lineage and then busco can be run as follows. # Get the lineage wget https://busco.ezlab.org/datasets/endopterygota_odb9.tar.gz # Uncompress the directory. tar xvf endopterygota_odb9.tar.gz --gunzip # Activate busco environment conda activate busco # Run BUSCO run_busco --in transcriptome.fasta --out [ output_directory_name ] -l [ path_to_ ] endopterygota_odb9 -m tran -c 48 - BUSCO manual - To use salmon, activate the conda environment and salmon can be run as follows. # Activate salmon environment. conda activate salmon # Create an index for the transcriptome. salmon index -t transcriptome.fasta -i transcriptome_index # Quantify the expression. salmon quant -i transcriptome_index -l IU --seqBias --gcBias -1 Sample1_R1.fastq.gz -2 Sample1_R2.fastq.gz -p 48 --validateMappings -o Sample1 - Salmon manual - TransDecoder has two programs. These two programs can be run as follows. # To run LongOrfs with minimum ORF length as 100 amino acids. TransDecoder.LongOrfs -t target_transcripts.fasta -m 100 # To run Predict TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 - TransDecoder manual - cd-hit can be run as follows. cd-hit -i cds_file -o nr99_cds_file -c 0 .99 - cd-hit manual Reference: De novo transcriptome assembly and its annotation for the black ant Formica fusca at the larval stage - PDF","title":"Group 6"},{"location":"group6/#project-objective","text":"Find the orthologs among the 5 species of beetles and annotate the orthologs.","title":"Project Objective:"},{"location":"group6/#project-workflow","text":"Step 1: Construct a de novo transcriptome assembly. a. Run Trinity to construct a primary assembly. b. Run BUSCO to check the quality of the assembly. Use BUSCO . Step 2: Identify the coding regions. a. Using generated transcriptome from the previous step, run LongOrfs with threshold set to at least 100 aa length for each ORF. Use TransDecoder.LongOrfs b. Using the predicted peptide sequences ( .pep file) run BLASTP against Tribolium castaneum protein sequences. Use makeblastdb and blastp with -max_target_seqs 1 -outfmt 6 -evalue 1e-5 flags. # Get the sequence file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_protein.faa.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_protein.faa.gz # Make sure to create blastdb before this command. # Example blastp. blastp -query transdecoder_dir/longest_orfs.pep -db Tcas_protein_db.fasta -max_target_seqs 1 -outfmt 6 -evalue 1e-5 -num_threads 48 > blastp.outfmt6 c. Using the homology information from BLASTP, predict the coding sequence. TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 d. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . - Step 3: Cluster identical sequences together. a. Cluster all the amino acid sequences which are 99% identical within the predicted peptide file. Use cd-hit with -c 0.99 flag. b. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . - Step 4: Filter transcripts with low expression. a. Quantify the expression for each gene. Use salmon b. Retain only the highest expressed isoforms for each gene. Write a python script. c. Run BUSCO to check the quality of the filtered transcriptome. Use BUSCO . - Step 5: Find the Orthologs among 5 species. a. Run all vs all BLAST among 5 species. Use makeblastdb and blastp . Use Tribolium castaneum transcript sequences. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_rna.fna.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_rna.fna.gz # Make sure to create blastdb before this command. # Example blastp. blastp -query highest_isoform_only.fasta -db Tcas_protein_db.fasta -max_target_seqs 1 -outfmt 6 -num_threads 48 > highest_isoform_only_species1_Tcas_db.txt b. Pick the reciprocal Best BLAST hit (RBBH). Write a python script. c. Run a 5 way script to pull out the orthologs among 5 species. Write a python script. d. Add annotation to the orthologs. Using T_cas ids and T_cas reference gff files, add chromosome id (for example: LGX, LG2 etc.),chromosome name (Autosome/ Sex chromosome). Write python script. # Get the gff file. wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/002/335/GCF_000002335.3_Tcas5.2/GCF_000002335.3_Tcas5.2_genomic.gff.gz # Uncompress the file. gzip -d GCF_000002335.3_Tcas5.2_genomic.gff.gz","title":"Project Workflow:"},{"location":"group6/#helpful-hints","text":"To use BUSCO, the first step is to get the lineage and then busco can be run as follows. # Get the lineage wget https://busco.ezlab.org/datasets/endopterygota_odb9.tar.gz # Uncompress the directory. tar xvf endopterygota_odb9.tar.gz --gunzip # Activate busco environment conda activate busco # Run BUSCO run_busco --in transcriptome.fasta --out [ output_directory_name ] -l [ path_to_ ] endopterygota_odb9 -m tran -c 48 - BUSCO manual - To use salmon, activate the conda environment and salmon can be run as follows. # Activate salmon environment. conda activate salmon # Create an index for the transcriptome. salmon index -t transcriptome.fasta -i transcriptome_index # Quantify the expression. salmon quant -i transcriptome_index -l IU --seqBias --gcBias -1 Sample1_R1.fastq.gz -2 Sample1_R2.fastq.gz -p 48 --validateMappings -o Sample1 - Salmon manual - TransDecoder has two programs. These two programs can be run as follows. # To run LongOrfs with minimum ORF length as 100 amino acids. TransDecoder.LongOrfs -t target_transcripts.fasta -m 100 # To run Predict TransDecoder.Predict -t target_transcripts.fasta --retain_blastp_hits blastp.outfmt6 - TransDecoder manual - cd-hit can be run as follows. cd-hit -i cds_file -o nr99_cds_file -c 0 .99 - cd-hit manual","title":"Helpful Hints:"},{"location":"group6/#reference","text":"De novo transcriptome assembly and its annotation for the black ant Formica fusca at the larval stage - PDF","title":"Reference:"}]}